Подробное описание проекта:

Суть работы:

    1) запускается веб-драйвер (имитирует поведение пользователя в бразузере в новом окне)
    2) скрипт авторизируется и получает информацию обо всех задачах
    3) данные записываются в json в следующем виде 
    [
        {
            "Дата выполнения": "09.06.2022",
            "Время начала": "12:56:00",
            "Время окончания": "13:56:00",
            "Количество часов": "1.0",
            "Контрагент": "",
            "Содержание": "Выкинуть мусор и убраться",
            "Автор": "dimonorsk1@gmail.com"
        },
        ...
    ]
    4) запуускается скрипт которые переписывает данные из json в xls формат
    5) скрипт завершает свою работу

Струкутура:

    1) main.py - запускаемый файл
    2) config.py - файл с пользовательскими настройками (для авторизации на Битриксе и папки для сохранения данных)
        (Если поменять названия директорий DIR_JSON (или DIR EXEL) то в проекте на верхнем уровне нужно будет создать данные папки, т.к при их отсутствии файлы не будут сохраняться)

    3) tools/
        1. driver_manager.py - класс для работы с веб-драйвером. Модель может авторизоваться на сайте битрикса и следуя по кнопкам перейти на страницу с задачами и собрать информацию. 
        (Для авторизации необходимо указать логин и пароль в config.py). Во время работы предусмотрены остановки скрипта (попытался криво имитировать поведение реального пользователя дабы не забанили)
        (UPD меня не забанили, а входил в аккаунт скриптом более 50 раз уж точно)
        
        2. exel_manager.py - модель для работы с xls файлом. В ней предусмотрены сортировки и отбор ключей (список ключей можно найти в файле config.py).
        Сам же модуль по своей сути записывает данные из json -> таблицу Exel.
        
        3. __init__.py - инициализация пакета (папки с файлами с расширением .py) и настройка импортов. (В общем лучше не трогать!).

        (4. geckfriver.exe - файлик для работы)


Программа реализована через работу драйвера selenium и парсинг его структуры по следующим причинам:  
    1) не удалось разобраться как работать с rest-api bitrix24 т.к нашел документацию к запросам но не нашел способа нормально создать приложение на битриксе для получения ключа доступа к их базе данных.
    2) обычные запросы requests на страницу также не работают т.к страницы генерируются скриптами и в исходном коде страницы нету информации для собрать
    3) получить код элемента удалось только при открытии своего окна браузера (Fire Fox)